<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<context:property-placeholder location="classpath:META-INF/dev.smsinfoservice.properties,META-INF/dev.operatorsGateway.properties,META-INF/dev.proxySettings.properties"/>-->

    <bean id="smsServiceDao" class="ua.np.services.smsinfo.SmsServiceDaoImpl">
        <property name="maxSendCount" value="100"/>
    </bean>
    <bean id="operatorDao" class="ua.np.services.smsinfo.OperatorDaoImpl"/>
    <bean id="smsServiceUtils" class="ua.np.services.smsinfo.SmsServiceUtils">
        <property name="operatorDao" ref="operatorDao"/>
    </bean>
    <bean id="smsInfoService" class="ua.np.services.smsinfo.SmsInfoServiceImpl">
        <property name="smsServiceDao" ref="smsServiceDao"/>
        <property name="smsServiceUtils" ref="smsServiceUtils" />
    </bean>

    <bean id="smsSendingJob" class="ua.np.services.smsinfo.SmsSendingJob">
        <property name="operatorDao" ref="operatorDao"/>
        <property name="smsServiceDao" ref="smsServiceDao"/>
        <property name="smsServiceUtils" ref="smsServiceUtils"/>
        <property name="maxSmsCountPerReqest" value="50"/>
    </bean>

    <bean id="jaxbContext" class="javax.xml.bind.JAXBContext" factory-method="newInstance">
        <constructor-arg>
            <list>
                <value>ua.np.services.smsinfo.KyivstarAcceptanceResponse</value>
            </list>
        </constructor-arg>
    </bean>

    <bean id="operatorRsClient" class="ua.np.services.smsinfo.OperatorRestClientImpl">
        <property name="proxyHost" value="${proxy.host}"/>
        <property name="proxyPort" value="${proxy.port}"/>
        <property name="proxyUsername" value="${proxy.username}"/>
        <property name="proxyPassword" value="${proxy.password}"/>
    </bean>

    <bean id="kyivstarSmsSendingStrategy" class="ua.np.services.smsinfo.KyivstarSmsSendingStrategy">
        <property name="operatorHost" value="${kyivstar.host}"/>
        <property name="operatorLogin" value="${kyivstar.hostUser}"/>
        <property name="operatorPassword" value="${kyivstar.hostPassword}"/>
        <property name="jaxbUnmarshaller">
            <bean factory-bean="jaxbContext" factory-method="createUnmarshaller"/>
        </property>
        <property name="operatorRestClient" ref="operatorRsClient"/>
    </bean>

    <bean id="lifeSmsSendingStrategy" class="ua.np.services.smsinfo.LifeSmsSendingStrategy">
        <property name="operatorHost" value="${life.host}"/>
        <property name="operatorAuthHost" value="${life.authHost}"/>
        <property name="operatorLogin" value="${life.hostUser}"/>
        <property name="operatorPassword" value="${life.hostPassword}"/>
        <property name="operatorRestClient" ref="operatorRsClient"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
        <property name="packagesToScan" value="ua.np.services.smsinfo"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect:org.hibernate.dialect.SQLServer2008Dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto:validate}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql:false}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--<context:component-scan base-package="ua.np.services.smsinfo"/>-->

    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* ua.np.services.smsinfo.SmsInfoServiceImpl.*(..))"/>
        <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvise"/>
    </aop:config>

    <tx:advice id="txAdvise" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--<tx:advice id="smsServiceDaoTxAdvice">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="MANDATORY"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<tx:advice id="operatorDaoTxAdvice">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="MANDATORY"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash; the transactional advice (what 'happens'; see the <aop:advisor/> bean below) &ndash;&gt;-->
    <!--<tx:advice id="smsInfoServiceTxAdvice">-->
        <!--&lt;!&ndash; the transactional semantics... &ndash;&gt;-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; all methods starting with 'read' are read-only &ndash;&gt;-->
            <!--<tx:method name="read*" read-only="true"/>-->
            <!--&lt;!&ndash; other methods use the default transaction settings (see below) &ndash;&gt;-->
            <!--<tx:method name="persist*"/>-->
            <!--<tx:method name="update*"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash; ensure that the above transactional advice runs for any execution-->
      <!--of an operation defined by the service interface &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="smsInfoServiceOperations" expression="bean(smsInfoService) &amp; execution(* ua.np.services.smsinfo.SmsInfoService.*(..))"/>-->
        <!--<aop:advisor advice-ref="smsInfoServiceTxAdvice" pointcut-ref="smsInfoServiceOperations"/>-->
        <!--<aop:advisor advice-ref="operatorDaoTxAdvice" pointcut-ref="smsInfoServiceOperations"/>-->
    <!--</aop:config>-->

</beans>