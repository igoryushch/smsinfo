<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="/**/${ENV:dev}.smsinfoservice.properties"/>

    <bean id="smsServiceUtils" class="ua.np.services.smsinfo.SmsServiceUtils"/>

    <bean id="smsServiceDao" class="ua.np.services.smsinfo.SmsServiceDaoImpl">
        <property name="maxSendCount" value="100"/>
    </bean>
    <bean id="smsService" class="ua.np.services.smsinfo.SmsServiceImpl">
        <property name="smsServiceDao" ref="smsServiceDao"/>
        <property name="operatorDao" ref="operatorDao"/>
    </bean>

    <bean id="operatorDao" class="ua.np.services.smsinfo.OperatorDaoImpl"/>
    <bean id="operatorService" class="ua.np.services.smsinfo.OperatorServiceImpl">
        <property name="operatorDao" ref="operatorDao"/>
    </bean>

    <bean id="smsInfoService" class="ua.np.services.smsinfo.SmsInfoServiceImpl">
        <property name="smsService" ref="smsService"/>
        <property name="smsServiceUtils" ref="smsServiceUtils"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="ua.np.services.smsinfo"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect:org.hibernate.dialect.SQLServer2008Dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto:validate}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql:false}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:advice id="txAdvise" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="smsServiceOperations" expression="bean(smsService) and execution(* ua.np.services.smsinfo.SmsService.*(..))"/>
        <aop:pointcut id="operatorServiceOperation" expression="bean(operatorService) and execution(* ua.np.services.smsinfo.OperatorService.*(..))"/>

        <aop:advisor pointcut-ref="smsServiceOperations" advice-ref="txAdvise"/>
        <aop:advisor pointcut-ref="operatorServiceOperation" advice-ref="txAdvise"/>
    </aop:config>


</beans>