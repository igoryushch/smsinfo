<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <bean id="smsServiceDao" class="ua.np.services.smsinfo.SmsServiceDaoImpl">
        <property name="maxSendCount" value="100"/>
    </bean>
    <bean id="operatorDao" class="ua.np.services.smsinfo.OperatorDaoImpl"/>
    <bean id="smsServiceUtils" class="ua.np.services.smsinfo.SmsServiceUtils">
        <property name="operatorDao" ref="operatorDao"/>
    </bean>
    <bean id="smsInfoService" class="ua.np.services.smsinfo.SmsInfoServiceImpl">
        <property name="smsServiceDao" ref="smsServiceDao"/>
        <property name="smsServiceUtils" ref="smsServiceUtils" />
    </bean>

    <bean id="smsSendingJob" class="ua.np.services.smsinfo.SmsSendingJob">
        <property name="operatorDao" ref="operatorDao"/>
        <property name="smsServiceDao" ref="smsServiceDao"/>
        <property name="smsServiceUtils" ref="smsServiceUtils"/>
    </bean>


    <bean id="jaxb2Marshaller"
          class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>ua.np.services.smsinfo.KyivstarSmsSendingStrategy</value>
                <value>ua.np.services.smsinfo.LifeSmsSendingStrategy</value>
            </list>
        </property>
    </bean>

    <bean id="kyivstarSmsSendingStrategy" class="ua.np.services.smsinfo.KyivstarSmsSendingStrategy">
        <property name="jaxbUnmarshaller" ref ="jaxb2Marshaller" />
    </bean>

    <bean id="lifeSmsSendingStrategy" class="ua.np.services.smsinfo.LifeSmsSendingStrategy">
        <!--<property name="jaxbUnmarshaller" ref ="jaxb2Marshaller" />-->
    </bean>

    <tx:annotation-driven/>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
        <property name="packagesToScan" value="ua.np.services.smsinfo"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:advice id="smsServiceDaoTxAdvice">
        <tx:attributes>
            <tx:method name="*" propagation="MANDATORY"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="operatorDaoTxAdvice">
        <tx:attributes>
            <tx:method name="*" propagation="MANDATORY"/>
        </tx:attributes>
    </tx:advice>

    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="smsInfoServiceTxAdvice">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
      of an operation defined by the service interface -->
    <aop:config>
        <aop:pointcut id="smsInfoServiceOperations" expression="bean(smsInfoService) &amp; execution(* ua.np.services.smsinfo.SmsInfoService.*(..))"/>
        <aop:advisor advice-ref="smsInfoServiceTxAdvice" pointcut-ref="smsInfoServiceOperations"/>
        <aop:advisor advice-ref="operatorDaoTxAdvice" pointcut-ref="smsInfoServiceOperations"/>
    </aop:config>

</beans>